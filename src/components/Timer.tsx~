import { useEffect, useState } from 'react';
import styles from './Timer.module.scss';

interface TimerProp {
    onStart: () => void;
    onStop: (interv: number, duration: number) => void,
}

export default function Timer(prop: TimerProp) {
    const [time, setTime] = useState<number>(0);

    const dists = Array.from(Array(60).keys()).map((i: number) => i * 6);
    let j = 0;

    const run = () => {
        console.log(time);
        j++;
        setTime(j);
    }

    useEffect(() => {
        console.log("rerendered");
    }, [])

    const start = (): number => {
        setTime(j);
        run();
        return window.setInterval(run, 1000);
    }

    const stop = () => {
        j = time;
        window.clearInterval(r);
    }

    return (
        <div className={styles.current}>
            <button onClick={start}>start</button>
            <div className={styles.timer}>
                <svg width="100" height="100" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
                    <defs>
                        <line id="tick" x1="50" y1="2" x2="50" y2="6" strokeWidth="0.8" strokeLinecap="round" />
                        <g id="ticks">
                            {dists.map((i: number) =>
                                <use href="#tick" transform={`rotate(${i})`} stroke="var(--ticks-color)" transform-origin="50 50" />
                            )}
                            <use href="#tick" stroke="var(--tick-color)" transform-origin="50 50" />;
                        </g>
                    </defs>
                    <use href="#ticks" transform={`rotate(${(time % 60) * 6})`} transform-origin="50 50" />
                </svg>
                <div className={styles.inner}>
                    <div className={styles.btn}>
                        <p>{Math.floor(time / (60 * 60)) % 24}:{Math.floor(time / 60) % 60}:{time % 60}</p>
                    </div>
                </div>
            </div>
            <button onClick={stop}>stop</button>
        </div>
    );
}
